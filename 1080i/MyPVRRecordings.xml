<?xml version="1.0" encoding="UTF-8"?>
<window>
    <defaultcontrol>50</defaultcontrol>
    <views>50</views>
    <controls>
        <include>DefaultBackground</include>
        <include content="BackgroundOverlay">
            <param name="parentid" value="50"/>
        </include>
        <include>Time</include>
	<!--
    ################################
    #
    #         Main list when you go into a folder
    #
    ################################
    -->
        <control type="group">
            <include>OpenClose</include>
            <control type="group" description="REC group">
                <include>VisibleFadeEffect</include>
                <include content="MiniVideoWindow">
                    <param name="itemicon">$VAR[PVRLargeIcon]</param>
                </include>

                <control type="list" id="50" description="REC">
                    <posx>960</posx>
                    <posy>60</posy>
                    <width>930</width>
                    <height>960</height>
                    <onleft condition="!Skin.HasSetting(KioskMode.Enabled)">102</onleft>
                    <onleft condition="Skin.HasSetting(KioskMode.Enabled)">50</onleft>
                    <onright>60</onright>
                    <onup>50</onup>
                    <ondown>50</ondown>
                    <pagecontrol>60</pagecontrol>
                    <scrolltime tween="sine" easing="inout">280</scrolltime>
                    <!-- TonyP Disable the list viewtype -->
                    <!-- <viewtype label="535">list</viewtype>-->
				<!--
				###
				#
				# When episode is NOT focused
				#
				###
				-->
                    <itemlayout height="60">
                        <control type="image">
                            <height>60</height>
                            <width>1076</width>
                            <texture flipy="true" border="3">list/ListNF.png</texture>
                        </control>
						<!--
						###
						#
						# Display green dot if list item is NOT a folder 
						# and the item/recording has been checked to be ok:
						#
						#    String.Contains(ListItem.Plot,"CHECKEDOK")
						#
						###
						-->
						<control type="image">
                            <left>4</left>
                            <top>3</top>
                            <width>44</width>
                            <height>44</height>
                            <texture>zoyinc/greencircle.png</texture>
							<visible>[!ListItem.IsFolder] + [String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
						<control type="image">
                            <left>4</left>
                            <top>3</top>
                            <width>44</width>
                            <height>44</height>
                            <texture>zoyinc/lightblue2circle.png</texture>
							<visible>[!ListItem.IsFolder] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]  + [!String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
                        <control type="image">
                            <left>10</left>
                            <top>8</top>
                            <width>33</width>
                            <height>33</height>
                            <texture>$VAR[Overlay]</texture>
                        </control>	
												
						<control type="image" id="1">
							  <left>20</left>
							  <top>60</top>
							  <width>250</width>
							  <height>200</height>
							  <visible>true</visible>
							  <colordiffuse>FFFFFFFF</colordiffuse>
							  <fadetime>200</fadetime>
							  <texture border="5" flipy="true" flipx="false">mytexture.png</texture>
							  <bordertexture border="5">mybordertexture.png</bordertexture>
							  <bordersize>5</bordersize>
							  <aspectratio>keep</aspectratio>
						</control>
						<!-- TonyP
						#
						# Display:   S11E09 The Witchfinders
						#
                        # Item
                        # - Has an EpisodeName
						# - Season is NOT set to 999
                        # - Item has NOT been checked
                        #
                        # This will display:
                        #     
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>S$INFO[ListItem.Season]E$INFO[ListItem.Episode]</label>
                            <visible>[!Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<!-- If Episode = 0 then it returns episode = "" -->
						<control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>S$INFO[ListItem.Season]E0</label>
                            <visible>[Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<control type="label" description="Main Label">
                           <left>170</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.EpisodeName]   [COLOR deepskyblue](NC)[/COLOR]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Has an EpisodeName
						# - Has Season == 999
                        # - Item has NOT been checked
                        #
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.Episode].</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<control type="label" description="Main Label">
                            <left>100</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.EpisodeName]   [COLOR deepskyblue](NC)[/COLOR]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>                        
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Does not have an EpisodeName
						# - Item has NOT been checked
                        #
                        -->
						<control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.Label]   [COLOR deepskyblue](NC)[/COLOR]</label>
                            <visible>[String.IsEmpty(ListItem.EpisodeName)] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<!-- TonyP
						#
						# Display:   S11E09 The Witchfinders
						#
                        # Item
                        # - Has an EpisodeName
						# - Season is NOT set to 999
                        # - Item has checked and is OK
                        #
                        # This will display:
                        #     
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>S$INFO[ListItem.Season]E$INFO[ListItem.Episode]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<control type="label" description="Main Label">
                           <left>170</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.EpisodeName]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Has an EpisodeName
						# - Has Season == 999
                        # - Item has checked and is OK
                        #
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.Episode].</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<control type="label" description="Main Label">
                            <left>100</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.EpisodeName]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>                        
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Does not have an EpisodeName
						# - Item has checked and is OK
                        #
                        -->
						<control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>$INFO[ListItem.Label]</label>
                            <visible>[String.IsEmpty(ListItem.EpisodeName)] + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                        </control>
						<!--
						#
						# Show date on all lines
						#
						-->
                        <control type="label" description="Label2">
                            <left>100</left>
                            <height>45</height>
                            <width>820</width>
                            <font>InfoPlot</font>
                            <textcolor>Grey</textcolor>
                            <scroll>false</scroll>
                            <align>right</align>
                            <label>$INFO[ListItem.Date]</label>
                        </control>
                    </itemlayout>
<!--
                    ###
                    #
                    # When episode is focused
                    #
                    ###
                    -->
                    <focusedlayout height="60">
                        <control type="image">
                            <width>1076</width>
                            <height>50</height>
                            <texture border="4" colordiffuse="$VAR[HighlightColor]">img/WhiteRoundedST2.png</texture>
                            <animation effect="fade" start="100" end="50" time="100" condition="!Control.HasFocus(50)">Conditional</animation>
                        </control>
						<!--
						###
						#
						# Display green dot if list item is NOT a folder 
						# and the item/recording has been checked to be ok:
						#
						#    String.Contains(ListItem.Plot,"CHECKEDOK")
						#
						###
						-->
						<control type="image">
                            <left>4</left>
                            <top>3</top>
                            <width>44</width>
                            <height>44</height>
                            <texture>zoyinc/greencircle.png</texture>
							<visible>[!ListItem.IsFolder] + [String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
						<control type="image">
                            <left>4</left>
                            <top>3</top>
                            <width>44</width>
                            <height>44</height>
                            <texture>zoyinc/lightblue2circle.png</texture>
							<visible>[!ListItem.IsFolder] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]] + [!String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
                        <control type="image">
                            <left>10</left>
                            <top>8</top>
                            <width>33</width>
                            <height>33</height>
                            <texture>$VAR[Overlay]</texture>
                        </control>
                        <!-- TonyP
						#
						# Display:   S11E09 The Witchfinders
						#
                        # Item
                        # - Has an EpisodeName
						# - Season is NOT set to 999
                        # - Item has NOT been checked
                        #
                        # This will display:
                        #     
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/B]</label>
                            <visible>[!Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<!-- If the episode is equal to 0 - for some reason it prints as a blank -->
						<control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]S$INFO[ListItem.Season]E0[/B]</label>
                            <visible>[Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<control type="label" description="Main Label">
                           <left>170</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]$INFO[ListItem.EpisodeName][/B]   [COLOR blue][B](NC)[/B][/COLOR]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Has an EpisodeName
						# - Has Season == 999
                        # - Item has NOT been checked
                        #
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]$INFO[ListItem.Episode].[/B]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<control type="label" description="Main Label">
                            <left>100</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]$INFO[ListItem.EpisodeName][/B]   [COLOR blue][B](NC)[/B][/COLOR]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>                        
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Does not have an EpisodeName
						# - Item has NOT been checked
                        #
                        -->
						<control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]$INFO[ListItem.Label][/B]   [COLOR blue][B](NC)[/B][/COLOR]</label>
                            <visible>[String.IsEmpty(ListItem.EpisodeName)] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<!-- TonyP
						#
						# Display:   S11E09 The Witchfinders
						#
                        # Item
                        # - Has an EpisodeName
						# - Season is NOT set to 999
                        # - Item has checked and is OK
                        #
                        # This will display:
                        #     
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/B]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<control type="label" description="Main Label">
                           <left>170</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
                            <label>[B]$INFO[ListItem.EpisodeName][/B]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Has an EpisodeName
						# - Has Season == 999
                        # - Item has checked and is OK
                        #
                        -->
                        <control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
							<label>[B]$INFO[ListItem.Episode].[/B]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<control type="label" description="Main Label">
                            <left>100</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
							<label>[B]$INFO[ListItem.EpisodeName][/B]</label>
                            <visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>                        
						<!-- TonyP
						#
						# Display:   2. Return of Daleks
						#
                        # Item
                        # - Does not have an EpisodeName
						# - Item has checked and is OK
                        #
                        -->
						<control type="label" description="Main Label">
                            <left>50</left>
                            <height>45</height>
                            <width>820</width>
                            <scroll>false</scroll>
                            <font>InfoPlot</font>
							<label>[B]$INFO[ListItem.Label][/B]</label>
                            <visible>[String.IsEmpty(ListItem.EpisodeName)] + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
						<!--
						#
						# Show date on all lines
						#
						-->
                        <control type="label" description="Label2">
                            <left>100</left>
                            <height>45</height>
                            <width>820</width>
                            <font>InfoPlot</font>
                            <scroll>false</scroll>
                            <align>right</align>
                            <label>$INFO[ListItem.Date]</label>
							<textcolor>$VAR[FocusedTextColor]</textcolor>
                            <selectedcolor>$VAR[FocusedTextColor]</selectedcolor>
                            <shadowcolor></shadowcolor>
                        </control>
                    </focusedlayout>
                </control>
            </control>
        </control>
        <include content="PanelTemplateMyPVR">
            <param name="top">445</param>
            <param name="height">280</param>
            <param name="heading">$INFO[Listitem.Title]</param><!-- Folder name to display in episode details for recordings - ZoyincTweak -->
            <param name="subheading">$INFO[Listitem.Duration]</param><!-- Duration of TV recording - ZoyincTweak -->
            <param name="plot">$VAR[Plots]</param><!-- Episode title - ZoyincTweak -->
            <param name="footer">$VAR[panelfooter]</param>
            <param name="visibility">!ListItem.IsFolder</param>
            <param name="showflags">false</param>
                        <param name="footertop">920</param>
        </include>
                <include content="PanelTemplate">
            <param name="top">445</param>
            <param name="height">280</param>
            <param name="heading">$VAR[panelheading]</param>
            <param name="subheading">$VAR[panelsubheading]</param>
            <param name="plot"> </param>
            <param name="footer">$VAR[panelfooter]</param>
            <param name="visibility">ListItem.IsFolder</param>
            <param name="showflags">false</param>
                        <param name="footertop">920</param>
        </include>
    <!--
    ################################
    #
    #         Episode list (Under fan art)
    #
    ################################
    -->
        <control type="group" description="REC group">
            <include>VisibleFadeEffect</include>
            <control type="group" description="INFO">
                <posx>60</posx>
                <posy>540</posy>
                <control type="panel" id="80">
                    <visible>ListItem.IsFolder + !ListItem.IsParentFolder</visible>
                    <width>860</width>
                    <height>400</height>
                    <orientation>vertical</orientation>
                    <scrolltime tween="sine" easing="out">50</scrolltime>
                    <autoscroll>true</autoscroll>
                    <!--
                    ###
                    #
                    # When episode is focused
                    #
                    ###
                    -->
                    <focusedlayout height="40" width="860">
						<control type="image">
                            <left>-1</left>
                            <top>1</top>
                            <width>38</width>
                            <height>38</height>
                            <texture>zoyinc/greencircle.png</texture>
							<visible>[!ListItem.IsFolder] + [String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
						<control type="image">
                            <left>-1</left>
                            <top>1</top>
                            <width>38</width>
                            <height>38</height>
                            <texture>zoyinc/lightblue2circle.png</texture>
							<visible>[!ListItem.IsFolder] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]] + [!String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
                        <control type="image">
							<left>3</left>
                            <top>5</top>
                            <width>30</width>
                            <height>30</height>
                            <texture>$VAR[Overlay]</texture>
                        </control>
                        <!-- TonyP
						#
						# Display:   Doctor Who (NC)
						#
                        # Item
                        # - Does NOT have an EpisodeName
                        # - Item has been NOT been checked  
                        #
                        # This will display:
                        #     
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>[B]$INFO[ListItem.Label][/B]   [COLOR deepskyblue][B](NC)[/B][/COLOR]</label>
								<textcolor>yellow</textcolor>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Label2">
								<!--
								# Only  display the date/time if an episode name is not given
								# This is a cosmetic choice
								-->
								<left>650</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Date]</label>
								<font>ZoyincPVRSmall</font>
								<scrollspeed>25</scrollspeed>
								<textcolor>yellow</textcolor>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control><!-- TonyP
						#
						# Display:  S1E3 The Evil of the Daleks (NC)
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season is NOT 999
                        # - Item has been NOT been checked  
                        #
                        -->
                            <control type="label" >                                
                                <left>40</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>[B]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/B]</label>
                                <textcolor>yellow</textcolor>
                                <scrollspeed>25</scrollspeed>
                                <visible>[!Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
							<!-- Episode is zero, for some reason it prints a blank -->
							<control type="label" >                                
                                <left>40</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>[B]S$INFO[ListItem.Season]E0[/B]</label>
                                <textcolor>yellow</textcolor>
                                <scrollspeed>25</scrollspeed>
                                <visible>[Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                            <control type="label" >
                                <left>145</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>[B]$INFO[ListItem.EpisodeName][/B]   [COLOR deepskyblue][B](NC)[/B][/COLOR]</label>
                                <textcolor>yellow</textcolor>
                                <scrollspeed>25</scrollspeed>
                                <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                        <!-- TonyP
						#
						# Display:  2. The Evil of the Daleks (NC)
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season == 999
                        # - Item has been NOT been checked  
                        #
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>[B]$INFO[ListItem.Episode].[/B]</label>
								<textcolor>yellow</textcolor>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Main Label">
								<left>90</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>[B]$INFO[ListItem.EpisodeName][/B]   [COLOR deepskyblue][B](NC)[/B][/COLOR]</label>
								<textcolor>yellow</textcolor>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
						<!-- TonyP
						#
						# Display:   Doctor Who
						#
                        # Item
                        # - Does NOT have an EpisodeName
                        # - Item has been checked and is OK
                        #
                        # This will display:
                        #     
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>[B]$INFO[ListItem.Label][/B]</label>
								<textcolor>yellow</textcolor>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Label2">
								<!--
								# Only  display the date/time if an episode name is not given
								# This is a cosmetic choice
								-->
								<left>650</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Date]</label>
								<font>ZoyincPVRSmall</font>
								<scrollspeed>25</scrollspeed>
								<textcolor>yellow</textcolor>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control><!-- TonyP
						#
						# Display:  S1E3 The Evil of the Daleks
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season is NOT 999
                        # - Item has been checked and is OK 
                        #
                        -->
                            <control type="label" >                                
                                <left>40</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>[B]S$INFO[ListItem.Season]E$INFO[ListItem.Episode][/B]</label>
                                <textcolor>yellow</textcolor>
                                <scrollspeed>25</scrollspeed>
                                <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                            <control type="label" >
                                <left>145</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>[B]$INFO[ListItem.EpisodeName][/B]</label>
                                <textcolor>yellow</textcolor>
                                <scrollspeed>25</scrollspeed>
                                <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                        <!-- TonyP
						#
						# Display:  2. The Evil of the Daleks
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season == 999
                        # - Item has been checked and is OK  
                        #
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>[B]$INFO[ListItem.Episode].[/B]</label>
								<textcolor>yellow</textcolor>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Main Label">
								<left>90</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>[B]$INFO[ListItem.EpisodeName][/B]</label>
								<textcolor>yellow</textcolor>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>						
                    </focusedlayout>
                    <itemlayout height="40" width="860">
					<!--
                    ###
                    #
                    # When episode is NOT focused
                    #
                    ###
                    -->
						<!--
						###
						#
						# Display green dot if list item is NOT a folder 
						# and the item/recording has been checked to be ok:
						#
						#    String.Contains(ListItem.Plot,"CHECKEDOK")
						#
						###
						-->
						<control type="image">
                            <left>-1</left>
                            <top>1</top>
                            <width>38</width>
                            <height>38</height>
                            <texture>zoyinc/greencircle.png</texture>
							<visible>[!ListItem.IsFolder] + [String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
						<control type="image">
                            <left>-1</left>
                            <top>1</top>
                            <width>38</width>
                            <height>38</height>
                            <texture>zoyinc/lightblue2circle.png</texture>
							<visible>[!ListItem.IsFolder] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]] + [!String.Contains(ListItem.Plot,"CHECKEDOK")]</visible>
                        </control>
						<control type="image">
						    <left>3</left>
                            <top>5</top>
                            <width>30</width>
                            <height>30</height>
                            <texture>$VAR[Overlay]</texture>
                        </control>
						

                        <!-- TonyP
						#
						# Display:   Doctor Who (NC)
						#
                        # Item
                        # - Does NOT have an EpisodeName
                        # - Item has been NOT been checked  
                        #
                        # This will display:
                        #     
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>$INFO[ListItem.Label]   [COLOR deepskyblue](NC)[/COLOR]</label>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Label2">
								<!--
								# Only  display the date/time if an episode name is not given
								# This is a cosmetic choice
								-->
								<left>650</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Date]</label>
								<font>ZoyincPVRSmall</font>
								<scrollspeed>25</scrollspeed>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control><!-- TonyP
						#
						# Display:  S1E3 The Evil of the Daleks (NC)
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season is NOT 999
                        # - Item has been NOT been checked  
                        #
                        -->
                            <control type="label" >                                
                                <left>40</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>S$INFO[ListItem.Season]E$INFO[ListItem.Episode]</label>
                                <scrollspeed>25</scrollspeed>
                                <visible>[!Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
							<!-- Episode is zero which seems to display as blank -->
							<control type="label" >                                
                                <left>40</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>S$INFO[ListItem.Season]E0</label>
                                <scrollspeed>25</scrollspeed>
                                <visible>[Integer.IsEqual(ListItem.Episode,0)] + [!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                            <control type="label" >
                                <left>145</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>$INFO[ListItem.EpisodeName]   [COLOR deepskyblue](NC)[/COLOR]</label>
                                <scrollspeed>25</scrollspeed>
                                <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                        <!-- TonyP
						#
						# Display:  2. The Evil of the Daleks (NC)
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season == 999
                        # - Item has been NOT been checked  
                        #
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>$INFO[ListItem.Episode].</label>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Main Label">
								<left>90</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>$INFO[ListItem.EpisodeName]   [COLOR deepskyblue](NC)[/COLOR]</label>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[String.Contains(ListItem.Plot,"NOTCHECKED")] | [String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
						<!-- TonyP
						#
						# Display:   Doctor Who
						#
                        # Item
                        # - Does NOT have an EpisodeName
                        # - Item has been checked and is OK
                        #
                        # This will display:
                        #     
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>$INFO[ListItem.Label]</label>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Label2">
								<!--
								# Only  display the date/time if an episode name is not given
								# This is a cosmetic choice
								-->
								<left>650</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<label>$INFO[ListItem.Date]</label>
								<font>ZoyincPVRSmall</font>
								<scrollspeed>25</scrollspeed>
								<visible>[String.IsEmpty(ListItem.EpisodeName)] + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control><!-- TonyP
						#
						# Display:  S1E3 The Evil of the Daleks
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season is NOT 999
                        # - Item has been checked and is OK 
                        #
                        -->
                            <control type="label" >                                
                                <left>40</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>S$INFO[ListItem.Season]E$INFO[ListItem.Episode]</label>
                                <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                            <control type="label" >
                                <left>145</left>
                                <height>40</height>
                                <width>860</width>
                                <aligny>center</aligny>
                                <font>ZoyincPVRSmall</font>
                                <label>$INFO[ListItem.EpisodeName]</label>
                                <visible>[!String.IsEmpty(ListItem.EpisodeName)] + !Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
                            </control>
                        <!-- TonyP
						#
						# Display:  2. The Evil of the Daleks
						#
                        # Item
                        # - Has an EpisodeName
                        # - The season == 999
                        # - Item has been checked and is OK  
                        #
                        -->
							<control type="label" description="Main Label">
								<left>40</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>$INFO[ListItem.Episode].</label>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>
							<control type="label" description="Main Label">
								<left>90</left>
								<height>40</height>
								<width>860</width>
								<aligny>center</aligny>
								<font>ZoyincPVRSmall</font>
								<label>$INFO[ListItem.EpisodeName]</label>
								<visible>[!String.IsEmpty(ListItem.EpisodeName)]+ Integer.IsEqual(ListItem.Season,999) + [[!String.Contains(ListItem.Plot,"NOTCHECKED")] + [!String.Contains(ListItem.Plot,"UNCHECKED")]]</visible>
							</control>							
					</itemlayout>
                    <content sortby="file" sortorder="descending">$INFO[ListItem.FilenameAndPath]</content>
                </control>

                <control type="label">
                    <description>Disk usage text</description>
                    <top>470</top>
                    <width>860</width>
                    <height>20</height>
                    <label>$INFO[PVR.backenddiskspace]</label>
                    <visible>!Integer.IsGreater(PVR.backenddiskspaceprogr,100)</visible>
                </control>
                <control type="progress">
                    <description>Disk usage bar</description>
                    <top>505</top>
                    <width>860</width>
                    <height>6</height>
                    <info>PVR.backenddiskspaceprogr</info>
                    <texturebg border="0,0,0,0">img/AmberDotBG.png</texturebg>
                    <midtexture border="0,0,0,0">img/AmberDot.png</midtexture>
                    <visible>!Integer.IsGreater(PVR.backenddiskspaceprogr,100)</visible>
                </control>
            </control>
        </control>
        <control type="scrollbar" id="60">
            <animation effect="slide" start="0,0" end="-8,0" time="150">Focus</animation>
            <animation effect="slide" start="-8,0" end="0,0" time="300">UnFocus</animation>
            <posx>21r</posx>
            <posy>60</posy>
            <width>36</width>
            <height>960</height>
            <texturesliderbackground></texturesliderbackground>
            <texturesliderbar></texturesliderbar>
            <texturesliderbarfocus></texturesliderbarfocus>
            <textureslidernib border="18">OSD/ScrollbarNibNF.png</textureslidernib>
            <textureslidernibfocus border="18" colordiffuse="$VAR[HighlightColor]">OSD/ScrollbarNibFO.png</textureslidernibfocus>
            <showonepage>false</showonepage>
            <orientation>vertical</orientation>
            <onleft>50</onleft>
            <onright condition="!Skin.HasSetting(KioskMode.Enabled)">9000</onright>
            <onright condition="Skin.HasSetting(KioskMode.Enabled)">50</onright>
        </control>
        <include>PVRSideBlade</include>
        <include>TouchButtons</include>
        <control type="label" id="29">
            <include>HiddenButton</include>
        </control>
        <control type="label" id="30">
            <include>HiddenButton</include>
        </control>
    </controls>
</window>